{"componentChunkName":"component---src-templates-blog-post-js","path":"/rust/double-ampersand-in-iterator/","result":{"data":{"site":{"siteMetadata":{"title":"あさくちブログ"}},"markdownRemark":{"id":"97a5dfc9-93e8-5469-8fa8-72054e9c543a","excerpt":"これ何 rustlings の iterators5.rs を解いているときの疑問。 これて test 通ったのだが、  （二重のアンパサンド）は何か正しくないような・・・。\nもしくは（二重のアスタリスク）？ trait.Iterator.html#method.filter https://doc.rust-lang…","html":"<h1>これ何</h1>\n<p>rustlings の iterators5.rs を解いているときの疑問。</p>\n<p>これて test 通ったのだが、 <code class=\"language-text\">&amp;&amp;</code> （二重のアンパサンド）は何か正しくないような・・・。\nもしくは<code class=\"language-text\">**</code>（二重のアスタリスク）？</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">count_iterator</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token class-name\">HashMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Progress</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Progress</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">usize</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// map is a hashmap with String keys and Progress values.</span>\n    <span class=\"token comment\">// map = { \"variables1\": Complete, \"from_str\": None, ... }</span>\n\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span>x<span class=\"token closure-punctuation punctuation\">|</span></span> x <span class=\"token operator\">==</span> <span class=\"token operator\">&amp;&amp;</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1>trait.Iterator.html#method.filter</h1>\n<p><a href=\"https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter\">https://doc.rust-lang.org/std/iter/trait.Iterator.html#method.filter</a></p>\n<p>iterator のところに書いてあった。</p>\n<blockquote>\n<p>Because the closure passed to filter() takes a reference, and many iterators iterate over references, this leads to a possibly confusing situation, where the type of the closure is a double reference:</p>\n</blockquote>\n<p>ふむ、values() が参照を返す上に更に filter() が参照を返すので、二重の参照になってしまう、と。</p>\n<p>↓ こうが見やすいのかな？</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">count_iterator</span><span class=\"token punctuation\">(</span>map<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span><span class=\"token class-name\">HashMap</span><span class=\"token operator\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Progress</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token class-name\">Progress</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">-></span> <span class=\"token keyword\">usize</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// map is a hashmap with String keys and Progress values.</span>\n    <span class=\"token comment\">// map = { \"variables1\": Complete, \"from_str\": None, ... }</span>\n\n    map<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token closure-params\"><span class=\"token closure-punctuation punctuation\">|</span><span class=\"token operator\">&amp;</span>x<span class=\"token closure-punctuation punctuation\">|</span></span> <span class=\"token operator\">*</span>x <span class=\"token operator\">==</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Rust filterの中の&&について","date":"July 15, 2021","description":null}},"previous":{"fields":{"slug":"/rust/collect/"},"frontmatter":{"title":"Rust collectついて"}},"next":{"fields":{"slug":"/docker/memo/"},"frontmatter":{"title":"Docker のメモ"}}},"pageContext":{"id":"97a5dfc9-93e8-5469-8fa8-72054e9c543a","previousPostId":"47b87ded-cc84-56fe-8806-fbe589949c9b","nextPostId":"d91e2499-caeb-5ec8-9c9c-692153288018"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}