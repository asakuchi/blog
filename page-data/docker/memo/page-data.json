{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker/memo/","result":{"data":{"site":{"siteMetadata":{"title":"あさくちブログ"}},"markdownRemark":{"id":"d91e2499-caeb-5ec8-9c9c-692153288018","excerpt":"DockerHub でイメージを探す 例えば、apache https://hub.docker.com/_/httpd Dockerfiile なしで 任意のディレクトリで以下のコマンドを実行する。 index.html…","html":"<h1>DockerHub でイメージを探す</h1>\n<p>例えば、apache</p>\n<p><a href=\"https://hub.docker.com/_/httpd\">https://hub.docker.com/_/httpd</a></p>\n<h1>Dockerfiile なしで</h1>\n<p>任意のディレクトリで以下のコマンドを実行する。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -dit --name my-apache-app -p <span class=\"token number\">8080</span>:80 -v <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>:/usr/local/apache2/htdocs/ httpd:2.4</code></pre></div>\n<p>index.html を作って<code class=\"language-text\">http://localhost:8080/</code> にアクセスするとそれが見れる。</p>\n<p>コンテナ一覧</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker container <span class=\"token function\">ls</span></code></pre></div>\n<p><code class=\"language-text\">-a</code>オプションで稼働中でないものも表示</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker container <span class=\"token function\">ls</span> -a</code></pre></div>\n<p>コンテナ停止</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker container stop my-apache-app\n<span class=\"token comment\"># or</span>\ndocker container stop cc32354cdbd5</code></pre></div>\n<p>コンテナ開始</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker container stop my-apache-app\n<span class=\"token comment\"># or</span>\ndocker container stop cc32354cdbd5</code></pre></div>\n<p>コンテナ削除</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">docker container <span class=\"token function\">rm</span> my-apache-app\n<span class=\"token comment\"># or</span>\ndocker container <span class=\"token function\">rm</span> cc32354cdbd5</code></pre></div>\n<h1>1 回限りのコンテナ</h1>\n<p><code class=\"language-text\">--rm</code> をつけると実行後にコンテナが削除される。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run --rm -v <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>:/usr/src/myapp -w /usr/src/myapp golang:1.16 go run hello.go</code></pre></div>\n<h1>2 つのコンテナ</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -dit --name web01 -p <span class=\"token number\">8080</span>:80 httpd:2.4\n$ docker run -dit --name web02 -p <span class=\"token number\">8081</span>:80 httpd:2.4\n\n$ docker <span class=\"token function\">cp</span> index02.html web02:/usr/local/apache2/htdocs\n$ docker <span class=\"token function\">cp</span> index02.html web02:/usr/local/apache2/htdocs/index.html</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -dit --name web01 -v <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>/web01data:/usr/local/apache2/htdocs -p <span class=\"token number\">8080</span>:80 httpd:2.4\n$ docker run -dit --name web02 -p <span class=\"token number\">8081</span>:80 httpd:2.4</code></pre></div>\n<h1>マウント</h1>\n<ul>\n<li>\n<p>バインドマウント</p>\n<ul>\n<li><code class=\"language-text\">-v</code> で指定する方法</li>\n<li>ホストのディレクトリ</li>\n</ul>\n</li>\n<li>\n<p>ボリュームマウント</p>\n<ul>\n<li>Docker エンジン上の領域</li>\n</ul>\n</li>\n</ul>\n<h1>ボリューム</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker volume create mysqlvolume</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run --name db01 -dit -v mysqlvolume:/var/lib/mysql -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>mypassword mysql:5.7</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run --name db01 -dit --mount <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>volume,src<span class=\"token operator\">=</span>mysqlvolume,dst<span class=\"token operator\">=</span>/var/lib/mysql -e <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>mypassword mysql:5.7</code></pre></div>\n<p><code class=\"language-text\">-v</code> よりも <code class=\"language-text\">--mount</code> の方がよい。</p>\n<h1>バックアップ</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run --rm --mount <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>volume,src<span class=\"token operator\">=</span>mysqlvolume,dst<span class=\"token operator\">=</span>/src --mount <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>bind,src<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>,dst<span class=\"token operator\">=</span>/dest busybox <span class=\"token function\">tar</span> czvf /dest/backup.tar.gz -C /src <span class=\"token builtin class-name\">.</span>\n<span class=\"token comment\"># or</span>\n$ docker run --rm --volumes-from db01 --mount <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>bind,src<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>,dst<span class=\"token operator\">=</span>/dest busybox <span class=\"token function\">tar</span> czvf /dest/backup.tar.gz -C /var/lib/mysql <span class=\"token builtin class-name\">.</span></code></pre></div>\n<h1>リストア</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run --rm --mount <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>volume,src<span class=\"token operator\">=</span>mysqlvolume,dst<span class=\"token operator\">=</span>/dest --mount <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>bind,src<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>,dst<span class=\"token operator\">=</span>/src busybox <span class=\"token function\">tar</span> xvf /src/backup.tar.gz -C /dest\n<span class=\"token comment\"># or</span>\n$ docker run --rm --volumes-from db01 --mount <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>bind,src<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>,dst<span class=\"token operator\">=</span>/src busybox <span class=\"token function\">tar</span> xvf /src/backup.tar.gz -C /var/lib/mysql</code></pre></div>\n<h1>ネットワーク</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker network create mydockernet</code></pre></div>\n<p>コンテナ作成時に追加</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run -dit --name web01 -p <span class=\"token number\">8080</span>:80 --net mydockernet httpd:2.4\n$ docker run -dit --name web02 -p <span class=\"token number\">8081</span>:80 --net mydockernet httpd:2.4</code></pre></div>\n<p>既存コンテナを追加</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker network connect mydockernet web01\n$ docker network connect mydockernet web02</code></pre></div>","frontmatter":{"title":"Docker のメモ","date":"July 18, 2021","description":null}},"previous":{"fields":{"slug":"/rust/double-ampersand-in-iterator/"},"frontmatter":{"title":"Rust filterの中の&&について"}},"next":{"fields":{"slug":"/rust/rust-vscode/"},"frontmatter":{"title":"Rust VSCode 拡張機能のインストールでエラー"}}},"pageContext":{"id":"d91e2499-caeb-5ec8-9c9c-692153288018","previousPostId":"97a5dfc9-93e8-5469-8fa8-72054e9c543a","nextPostId":"f0fcefa5-df68-5b4a-b4cd-edc69b81c406"}},"staticQueryHashes":["2841359383","3348849317"]}