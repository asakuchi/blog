{"componentChunkName":"component---src-templates-blog-post-js","path":"/docker/memo/","result":{"data":{"site":{"siteMetadata":{"title":"あさくちブログ"}},"markdownRemark":{"id":"d91e2499-caeb-5ec8-9c9c-692153288018","excerpt":"DockerHub でイメージを探す 例えば、apache https://hub.docker.com/_/httpd Dockerfiile なしで 任意のディレクトリで以下のコマンドを実行する。 index.html…","html":"<h1>DockerHub でイメージを探す</h1>\n<p>例えば、apache</p>\n<p><a href=\"https://hub.docker.com/_/httpd\">https://hub.docker.com/_/httpd</a></p>\n<h1>Dockerfiile なしで</h1>\n<p>任意のディレクトリで以下のコマンドを実行する。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-dit</span> <span class=\"token parameter variable\">--name</span> my-apache-app <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8080</span>:80 <span class=\"token parameter variable\">-v</span> <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>:/usr/local/apache2/htdocs/ httpd:2.4</code></pre></div>\n<p>index.html を作って<code class=\"language-text\">http://localhost:8080/</code> にアクセスするとそれが見れる。</p>\n<p>コンテナ一覧</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> container <span class=\"token function\">ls</span></code></pre></div>\n<p><code class=\"language-text\">-a</code>オプションで稼働中でないものも表示</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> container <span class=\"token function\">ls</span> <span class=\"token parameter variable\">-a</span></code></pre></div>\n<p>コンテナ停止</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> container stop my-apache-app\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">docker</span> container stop cc32354cdbd5</code></pre></div>\n<p>コンテナ開始</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> container stop my-apache-app\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">docker</span> container stop cc32354cdbd5</code></pre></div>\n<p>コンテナ削除</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> container <span class=\"token function\">rm</span> my-apache-app\n<span class=\"token comment\"># or</span>\n<span class=\"token function\">docker</span> container <span class=\"token function\">rm</span> cc32354cdbd5</code></pre></div>\n<h1>1 回限りのコンテナ</h1>\n<p><code class=\"language-text\">--rm</code> をつけると実行後にコンテナが削除される。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">-v</span> <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>:/usr/src/myapp <span class=\"token parameter variable\">-w</span> /usr/src/myapp golang:1.16 go run hello.go</code></pre></div>\n<h1>2 つのコンテナ</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-dit</span> <span class=\"token parameter variable\">--name</span> web01 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8080</span>:80 httpd:2.4\n$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-dit</span> <span class=\"token parameter variable\">--name</span> web02 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8081</span>:80 httpd:2.4\n\n$ <span class=\"token function\">docker</span> <span class=\"token function\">cp</span> index02.html web02:/usr/local/apache2/htdocs\n$ <span class=\"token function\">docker</span> <span class=\"token function\">cp</span> index02.html web02:/usr/local/apache2/htdocs/index.html</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-dit</span> <span class=\"token parameter variable\">--name</span> web01 <span class=\"token parameter variable\">-v</span> <span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>/web01data:/usr/local/apache2/htdocs <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8080</span>:80 httpd:2.4\n$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-dit</span> <span class=\"token parameter variable\">--name</span> web02 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8081</span>:80 httpd:2.4\n</code></pre></div>\n<h1>マウント</h1>\n<ul>\n<li>バインドマウント\n<ul>\n<li><code class=\"language-text\">-v</code> で指定する方法</li>\n<li>ホストのディレクトリ</li>\n</ul>\n</li>\n<li>ボリュームマウント\n<ul>\n<li>Docker エンジン上の領域</li>\n</ul>\n</li>\n</ul>\n<h1>ボリューム</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> volume create mysqlvolume</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--name</span> db01 <span class=\"token parameter variable\">-dit</span> <span class=\"token parameter variable\">-v</span> mysqlvolume:/var/lib/mysql <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>mypassword mysql:5.7</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--name</span> db01 <span class=\"token parameter variable\">-dit</span> <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>volume,src<span class=\"token operator\">=</span>mysqlvolume,dst<span class=\"token operator\">=</span>/var/lib/mysql <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">MYSQL_ROOT_PASSWORD</span><span class=\"token operator\">=</span>mypassword mysql:5.7</code></pre></div>\n<p><code class=\"language-text\">-v</code> よりも <code class=\"language-text\">--mount</code> の方がよい。</p>\n<h1>バックアップ</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>volume,src<span class=\"token operator\">=</span>mysqlvolume,dst<span class=\"token operator\">=</span>/src <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>bind,src<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>,dst<span class=\"token operator\">=</span>/dest busybox <span class=\"token function\">tar</span> czvf /dest/backup.tar.gz <span class=\"token parameter variable\">-C</span> /src <span class=\"token builtin class-name\">.</span>\n<span class=\"token comment\"># or</span>\n$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--rm</span> --volumes-from db01 <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>bind,src<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>,dst<span class=\"token operator\">=</span>/dest busybox <span class=\"token function\">tar</span> czvf /dest/backup.tar.gz <span class=\"token parameter variable\">-C</span> /var/lib/mysql <span class=\"token builtin class-name\">.</span></code></pre></div>\n<h1>リストア</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--rm</span> <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>volume,src<span class=\"token operator\">=</span>mysqlvolume,dst<span class=\"token operator\">=</span>/dest <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>bind,src<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>,dst<span class=\"token operator\">=</span>/src busybox <span class=\"token function\">tar</span> xvf /src/backup.tar.gz <span class=\"token parameter variable\">-C</span> /dest\n<span class=\"token comment\"># or</span>\n$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">--rm</span> --volumes-from db01 <span class=\"token parameter variable\">--mount</span> <span class=\"token assign-left variable\">type</span><span class=\"token operator\">=</span>bind,src<span class=\"token operator\">=</span><span class=\"token string\">\"<span class=\"token environment constant\">$PWD</span>\"</span>,dst<span class=\"token operator\">=</span>/src busybox <span class=\"token function\">tar</span> xvf /src/backup.tar.gz <span class=\"token parameter variable\">-C</span> /var/lib/mysql</code></pre></div>\n<h1>ネットワーク</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> network create mydockernet</code></pre></div>\n<p>コンテナ作成時に追加</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-dit</span> <span class=\"token parameter variable\">--name</span> web01 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8080</span>:80 <span class=\"token parameter variable\">--net</span> mydockernet httpd:2.4\n$ <span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-dit</span> <span class=\"token parameter variable\">--name</span> web02 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8081</span>:80 <span class=\"token parameter variable\">--net</span> mydockernet httpd:2.4</code></pre></div>\n<p>既存コンテナを追加</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> network connect mydockernet web01\n$ <span class=\"token function\">docker</span> network connect mydockernet web02</code></pre></div>\n<!-- # WordPress\n\n```bash\n$ docker network create wordpressnet\n\n$ docker volume create wordpress_db_volume\n\n$ docker run --name wordpress-db -dit --mount type=volume,src=wordpress_db_volume,dst=/var/lib/mysql -e MYSQL_ROOT_PASSWORD=myrootpassword -e M\nYSQL_DATABASE=wordpressdb -e MYSQL_USER=wordpressuser -e MYSQL_PASSWORD=wordpresspass --net wordpressnet mysql:5.7\nb1a6ba6d2c96930a2c67db95a57d404860c9805560d75e0e224ac84eef55c111\n\n$ docker run --name wordpress-app -dit -p 8080:80 -e WORDPRESS_DB_HOST=wordpress-db -e WORDPRESS_DB_NAME=wordpressdb -e WORDPRESS_DB_USER=wordp\nressuser -e WORDPRESS_DB_PASSWORD=wordpresspass --net wordpressnet wordpress\n``` -->\n<h1>docker-compose</h1>\n<p>docker-compose.yml</p>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span>\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">wordpress-db</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> mysql<span class=\"token punctuation\">:</span><span class=\"token number\">5.7</span>\n    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> wordpress_db_volume<span class=\"token punctuation\">:</span>/var/lib/mysql\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">MYSQL_ROOT_PASSWORD</span><span class=\"token punctuation\">:</span> myrootpassword\n      <span class=\"token key atrule\">MYSQL_DATABASE</span><span class=\"token punctuation\">:</span> wordpressdb\n      <span class=\"token key atrule\">MYSQL_USER</span><span class=\"token punctuation\">:</span> wordpressuser\n      <span class=\"token key atrule\">MYSQL_PASSWORD</span><span class=\"token punctuation\">:</span> wordpresspass\n\n  <span class=\"token key atrule\">wordpress-app</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> wordpress<span class=\"token punctuation\">-</span>db\n    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> wordpress\n    <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> 8080<span class=\"token punctuation\">:</span><span class=\"token number\">80</span>\n    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always\n    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">WORDPRESS_DB_HOST</span><span class=\"token punctuation\">:</span> wordpress<span class=\"token punctuation\">-</span>db\n      <span class=\"token key atrule\">WORDPRESS_DB_NAME</span><span class=\"token punctuation\">:</span> wordpressdb\n      <span class=\"token key atrule\">WORDPRESS_DB_USER</span><span class=\"token punctuation\">:</span> wordpressuser\n      <span class=\"token key atrule\">WORDPRESS_DB_PASSWORD</span><span class=\"token punctuation\">:</span> wordpresspass\n\n<span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n  wordpress_db_volume<span class=\"token punctuation\">:</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker-compose</span> up <span class=\"token parameter variable\">-d</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker-compose</span> down</code></pre></div>\n<h1>コンテナから image 作成</h1>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> commit webcontent mycustomed_httpd</code></pre></div>\n<h1>Dockerfile から image 作成</h1>\n<p>Dockerfile</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> httpd</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> index.html /usr/local/apache2/htdocs/</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> build <span class=\"token builtin class-name\">.</span> <span class=\"token parameter variable\">-t</span> myimage01</code></pre></div>\n<h1>DockerHub に登録</h1>\n<ul>\n<li>DockerHub にリポジトリを作る</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">docker</span> build <span class=\"token builtin class-name\">.</span> <span class=\"token parameter variable\">-t</span> myexample\n$ <span class=\"token function\">docker</span> tag myexample paleapricot/myexample\n$ <span class=\"token function\">docker</span> login\n$ <span class=\"token function\">docker</span> push paleapricot/myexample</code></pre></div>\n<h1>Amazon ECR に登録</h1>\n<p>Amazon Elastic Container Registry</p>\n<ul>\n<li>ECR にリポジトリを作る</li>\n<li>push コマンド等は ECR で確認できるのでそれを実行する\n<ul>\n<li>ログイン</li>\n<li>イメージ構築</li>\n<li>タグ付け</li>\n<li>push</li>\n</ul>\n</li>\n</ul>\n<h1>Kubernetes</h1>\n<p>起動</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ minikube start vm-driver<span class=\"token operator\">=</span>docker</code></pre></div>\n<p>認証情報作成</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl create secret docker-registry mysecret --docker-server<span class=\"token operator\">=</span>server --docker-username<span class=\"token operator\">=</span>username --docker-password<span class=\"token operator\">=</span>pass</code></pre></div>\n<p>オブジェクトの作成</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># マニフェストファイルを指定する</span>\n$ kubectl create <span class=\"token parameter variable\">-f</span> deploy.yml\n$ kubectl create <span class=\"token parameter variable\">-f</span> service.yml</code></pre></div>\n<p>オブジェクトの確認</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl get pod\n$ kubectl get deployments\n$ kubectl get services</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ minikube <span class=\"token function\">service</span> my-service</code></pre></div>\n<p>変更を適用</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl apply <span class=\"token parameter variable\">-f</span> deploy.yml <span class=\"token parameter variable\">--record</span><span class=\"token operator\">=</span>true</code></pre></div>\n<p>削除</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ kubectl delete <span class=\"token parameter variable\">-f</span> deploy.yml\n$ kubectl delete <span class=\"token parameter variable\">-f</span> service.yml</code></pre></div>","frontmatter":{"title":"Docker のメモ","date":"July 18, 2021","description":null}},"previous":{"fields":{"slug":"/rust/double-ampersand-in-iterator/"},"frontmatter":{"title":"Rust filterの中の&&について"}},"next":{"fields":{"slug":"/rust/rust-vscode/"},"frontmatter":{"title":"Rust VSCode 拡張機能のインストールでエラー"}}},"pageContext":{"id":"d91e2499-caeb-5ec8-9c9c-692153288018","previousPostId":"97a5dfc9-93e8-5469-8fa8-72054e9c543a","nextPostId":"f0fcefa5-df68-5b4a-b4cd-edc69b81c406"}},"staticQueryHashes":["2841359383","3257411868"],"slicesMap":{}}